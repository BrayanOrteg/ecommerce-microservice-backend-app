{
    "info": {
        "name": "E2E Test 5: User Favorites and Recommendations",
        "description": "Comprehensive E2E test for favorites management and product recommendations through API Gateway",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8080",
            "type": "string"
        },
        {
            "key": "user_id",
            "value": "",
            "type": "string"
        },
        {
            "key": "category_id_1",
            "value": "",
            "type": "string"
        },
        {
            "key": "category_id_2",
            "value": "",
            "type": "string"
        },
        {
            "key": "product_id_1",
            "value": "",
            "type": "string"
        },
        {
            "key": "product_id_2",
            "value": "",
            "type": "string"
        },
        {
            "key": "product_id_3",
            "value": "",
            "type": "string"
        },
        {
            "key": "favourite_id_1",
            "value": "",
            "type": "string"
        },
        {
            "key": "favourite_id_2",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "1. Health Check - API Gateway",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('API Gateway is healthy', function () {",
                            "    pm.response.to.have.status(200);",
                            "    pm.response.to.be.ok;",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/actuator/health",
                    "host": ["{{base_url}}"],
                    "path": ["actuator", "health"]
                }
            }
        },
        {
            "name": "2. Create User for Favorites Test",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('User created successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('userId');",
                            "    pm.expect(jsonData.firstName).to.eql('Emma');",
                            "    pm.expect(jsonData.lastName).to.eql('Collector');",
                            "    pm.collectionVariables.set('user_id', jsonData.userId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"firstName\": \"Emma\",\n    \"lastName\": \"Collector\",\n    \"email\": \"emma.collector@example.com\",\n    \"phone\": \"+1555123456\",\n    \"birthDate\": \"1992-03-10\",\n    \"imageUrl\": \"https://example.com/emma.jpg\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/users",
                    "host": ["{{base_url}}"],
                    "path": ["api", "users"]
                }
            }
        },
        {
            "name": "3. Create Electronics Category",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Electronics category created successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('categoryId');",
                            "    pm.expect(jsonData.categoryTitle).to.eql('Electronics');",
                            "    pm.collectionVariables.set('category_id_1', jsonData.categoryId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"categoryTitle\": \"Electronics\",\n    \"imageUrl\": \"https://example.com/electronics.jpg\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/categories",
                    "host": ["{{base_url}}"],
                    "path": ["api", "categories"]
                }
            }
        },
        {
            "name": "4. Create Books Category",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Books category created successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('categoryId');",
                            "    pm.expect(jsonData.categoryTitle).to.eql('Books');",
                            "    pm.collectionVariables.set('category_id_2', jsonData.categoryId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"categoryTitle\": \"Books\",\n    \"imageUrl\": \"https://example.com/books.jpg\"\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/categories",
                    "host": ["{{base_url}}"],
                    "path": ["api", "categories"]
                }
            }
        },
        {
            "name": "5. Create Smartphone Product",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Smartphone product created successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('productId');",
                            "    pm.expect(jsonData.productTitle).to.eql('iPhone 15 Pro');",
                            "    pm.collectionVariables.set('product_id_1', jsonData.productId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"productTitle\": \"iPhone 15 Pro\",\n    \"imageUrl\": \"https://example.com/iphone15.jpg\",\n    \"sku\": \"IPHONE15PRO-256GB\",\n    \"productPrice\": 999.99,\n    \"productQuantity\": 25,\n    \"categoryId\": {{category_id_1}}\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/products",
                    "host": ["{{base_url}}"],
                    "path": ["api", "products"]
                }
            }
        },
        {
            "name": "6. Create Laptop Product",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Laptop product created successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('productId');",
                            "    pm.expect(jsonData.productTitle).to.eql('MacBook Pro M3');",
                            "    pm.collectionVariables.set('product_id_2', jsonData.productId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"productTitle\": \"MacBook Pro M3\",\n    \"imageUrl\": \"https://example.com/macbook.jpg\",\n    \"sku\": \"MACBOOK-PRO-M3-16\",\n    \"productPrice\": 2499.99,\n    \"productQuantity\": 15,\n    \"categoryId\": {{category_id_1}}\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/products",
                    "host": ["{{base_url}}"],
                    "path": ["api", "products"]
                }
            }
        },
        {
            "name": "7. Create Book Product",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Book product created successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('productId');",
                            "    pm.expect(jsonData.productTitle).to.eql('Clean Code');",
                            "    pm.collectionVariables.set('product_id_3', jsonData.productId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"productTitle\": \"Clean Code\",\n    \"imageUrl\": \"https://example.com/cleancode.jpg\",\n    \"sku\": \"BOOK-CLEANCODE-EN\",\n    \"productPrice\": 45.99,\n    \"productQuantity\": 100,\n    \"categoryId\": {{category_id_2}}\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/products",
                    "host": ["{{base_url}}"],
                    "path": ["api", "products"]
                }
            }
        },
        {
            "name": "8. Add iPhone to Favorites",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('iPhone added to favorites successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('favouriteId');",
                            "    pm.expect(jsonData.userId).to.eql(parseInt(pm.collectionVariables.get('user_id')));",
                            "    pm.expect(jsonData.productId).to.eql(parseInt(pm.collectionVariables.get('product_id_1')));",
                            "    pm.collectionVariables.set('favourite_id_1', jsonData.favouriteId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"userId\": {{user_id}},\n    \"productId\": {{product_id_1}}\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/favourites",
                    "host": ["{{base_url}}"],
                    "path": ["api", "favourites"]
                }
            }
        },
        {
            "name": "9. Add MacBook to Favorites",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('MacBook added to favorites successfully', function () {",
                            "    pm.response.to.have.status(201);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('favouriteId');",
                            "    pm.expect(jsonData.userId).to.eql(parseInt(pm.collectionVariables.get('user_id')));",
                            "    pm.expect(jsonData.productId).to.eql(parseInt(pm.collectionVariables.get('product_id_2')));",
                            "    pm.collectionVariables.set('favourite_id_2', jsonData.favouriteId);",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"userId\": {{user_id}},\n    \"productId\": {{product_id_2}}\n}"
                },
                "url": {
                    "raw": "{{base_url}}/api/favourites",
                    "host": ["{{base_url}}"],
                    "path": ["api", "favourites"]
                }
            }
        },
        {
            "name": "10. Get User's Favorite Products",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('User favorites retrieved successfully', function () {",
                            "    pm.response.to.have.status(200);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.be.an('array');",
                            "    pm.expect(jsonData.length).to.be.at.least(2);",
                            "    ",
                            "    // Check if both favorite products are in the response",
                            "    var productIds = jsonData.map(fav => fav.productId);",
                            "    pm.expect(productIds).to.include(parseInt(pm.collectionVariables.get('product_id_1')));",
                            "    pm.expect(productIds).to.include(parseInt(pm.collectionVariables.get('product_id_2')));",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/favourites/user/{{user_id}}",
                    "host": ["{{base_url}}"],
                    "path": ["api", "favourites", "user", "{{user_id}}"]
                }
            }
        },
        {
            "name": "11. Get Specific Favorite Details",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Favorite details retrieved successfully', function () {",
                            "    pm.response.to.have.status(200);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.have.property('favouriteId');",
                            "    pm.expect(jsonData.favouriteId).to.eql(parseInt(pm.collectionVariables.get('favourite_id_1')));",
                            "    pm.expect(jsonData.userId).to.eql(parseInt(pm.collectionVariables.get('user_id')));",
                            "    pm.expect(jsonData.productId).to.eql(parseInt(pm.collectionVariables.get('product_id_1')));",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/favourites/{{favourite_id_1}}",
                    "host": ["{{base_url}}"],
                    "path": ["api", "favourites", "{{favourite_id_1}}"]
                }
            }
        },
        {
            "name": "12. Get Products by Category for Recommendations",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Electronics products retrieved for recommendations', function () {",
                            "    pm.response.to.have.status(200);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.be.an('array');",
                            "    pm.expect(jsonData.length).to.be.at.least(2);",
                            "    ",
                            "    // Verify that all products belong to electronics category",
                            "    jsonData.forEach(function(product) {",
                            "        pm.expect(product.categoryId).to.eql(parseInt(pm.collectionVariables.get('category_id_1')));",
                            "    });",
                            "    ",
                            "    console.log('Found ' + jsonData.length + ' electronics products for recommendations');",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/products/category/{{category_id_1}}",
                    "host": ["{{base_url}}"],
                    "path": ["api", "products", "category", "{{category_id_1}}"]
                }
            }
        },
        {
            "name": "13. Remove One Product from Favorites",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Product removed from favorites successfully', function () {",
                            "    pm.response.to.have.status(200);",
                            "    console.log('MacBook removed from favorites');",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/favourites/{{favourite_id_2}}",
                    "host": ["{{base_url}}"],
                    "path": ["api", "favourites", "{{favourite_id_2}}"]
                }
            }
        },
        {
            "name": "14. Verify Updated Favorites List",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Updated favorites list verified', function () {",
                            "    pm.response.to.have.status(200);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.be.an('array');",
                            "    ",
                            "    // Should only have one favorite left (iPhone)",
                            "    pm.expect(jsonData.length).to.eql(1);",
                            "    pm.expect(jsonData[0].productId).to.eql(parseInt(pm.collectionVariables.get('product_id_1')));",
                            "    ",
                            "    console.log('Favorites list updated successfully - only iPhone remains');",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/favourites/user/{{user_id}}",
                    "host": ["{{base_url}}"],
                    "path": ["api", "favourites", "user", "{{user_id}}"]
                }
            }
        },
        {
            "name": "15. Get All Categories for Recommendations",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('All categories retrieved for recommendations', function () {",
                            "    pm.response.to.have.status(200);",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData).to.be.an('array');",
                            "    pm.expect(jsonData.length).to.be.at.least(2);",
                            "    ",
                            "    // Verify both created categories are present",
                            "    var categoryTitles = jsonData.map(cat => cat.categoryTitle);",
                            "    pm.expect(categoryTitles).to.include('Electronics');",
                            "    pm.expect(categoryTitles).to.include('Books');",
                            "    ",
                            "    console.log('E2E Favorites and Recommendations test completed successfully!');",
                            "});"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/categories",
                    "host": ["{{base_url}}"],
                    "path": ["api", "categories"]
                }
            }
        }
    ]
}
